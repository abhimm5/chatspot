[{"C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\index.js":"1","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\App.js":"2","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\screens\\Join.js":"4","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\screens\\Home.js":"5","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\Header.js":"6","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\NavigationBar.js":"7","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\Club.js":"8","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\Online.js":"9","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\PrivateChat.js":"10","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\Chats.js":"11","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\ClubMessages.js":"12","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\MessageBar.js":"13","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\Message.js":"14"},{"size":500,"mtime":1611048567904,"results":"15","hashOfConfig":"16"},{"size":342,"mtime":1611255966988,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":886,"mtime":1611252664483,"results":"19","hashOfConfig":"16"},{"size":3551,"mtime":1611562448937,"results":"20","hashOfConfig":"16"},{"size":885,"mtime":1611169781452,"results":"21","hashOfConfig":"16"},{"size":687,"mtime":1611255477979,"results":"22","hashOfConfig":"16"},{"size":435,"mtime":1611255848104,"results":"23","hashOfConfig":"16"},{"size":1166,"mtime":1611317649718,"results":"24","hashOfConfig":"16"},{"size":1378,"mtime":1611566657866,"results":"25","hashOfConfig":"16"},{"size":563,"mtime":1611551550231,"results":"26","hashOfConfig":"16"},{"size":480,"mtime":1611242880961,"results":"27","hashOfConfig":"16"},{"size":2575,"mtime":1611233012690,"results":"28","hashOfConfig":"16"},{"size":739,"mtime":1611316570527,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1fen1jq",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\index.js",[],["64","65"],"C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\App.js",[],"C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\screens\\Join.js",[],"C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\screens\\Home.js",["66","67"],"import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport Header from \"../components/Header\";\r\nimport NavigationBar from \"../components/NavigationBar\";\r\nimport Club from \"../components/Club\";\r\nimport Online from \"../components/Online\";\r\nimport Chats from \"../components/Chats\";\r\nimport PrivateChat from \"../components/PrivateChat\";\r\n\r\nlet socket;\r\n\r\nconst Home = ({ location }) => {\r\n  const [club, setClub] = useState(true);\r\n  const [online, setOnline] = useState(false);\r\n  const [chats, setChats] = useState(false);\r\n  const [privateChat, setPrivateChat] = useState(false);\r\n  const [PrivateChatSecondUsername, setPrivateChatSecondUsername] = useState(\r\n    \"\"\r\n  );\r\n  const [navigation, setNavigation] = useState(true);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [users, setUsers] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [Inbox, setInbox] = useState([]);\r\n  const ENDPOINT = \"localhost:5000\";\r\n\r\n  useEffect(() => {\r\n    const { username, room } = queryString.parse(location.search);\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n    setUsername(username);\r\n    setRoom(room);\r\n\r\n    socket.emit(\"join\", { username, room }, () => {});\r\n\r\n    return () => {\r\n      socket.emit(\"disconnect\");\r\n      socket.off();\r\n    };\r\n  }, [ENDPOINT, location.search]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      setMessages([...messages, message]);\r\n    });\r\n\r\n    socket.on(\"privateMess\", async (message) => {\r\n      let oldMessages = await JSON.parse(localStorage.getItem(message.privateRoom));\r\n\r\n      await localStorage.setItem(\r\n        message.privateRoom,\r\n        JSON.stringify(\r\n          oldMessages ? [...oldMessages, message.chatData] : [message.chatData]\r\n        )\r\n      );\r\n      if (PrivateChatSecondUsername !== message.chatData.username) {\r\n        setInbox([...Inbox, message.chatData]);\r\n      }\r\n    });\r\n\r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n  }, [messages, Inbox]);\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header username={username} />\r\n      {navigation ? (\r\n        <NavigationBar\r\n          setClub={setClub}\r\n          setOnline={setOnline}\r\n          setChats={setChats}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {club ? (\r\n        <Club\r\n          message={message}\r\n          messages={messages}\r\n          username={username}\r\n          setMessage={setMessage}\r\n          sendMessage={sendMessage}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {online ? (\r\n        <Online\r\n          users={users}\r\n          setPrivateChat={setPrivateChat}\r\n          setOnline={setOnline}\r\n          setChats={setChats}\r\n          setClub={setClub}\r\n          setNavigation={setNavigation}\r\n          setPrivateChatSecondUsername={setPrivateChatSecondUsername}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {chats ? <Chats Inbox={Inbox} /> : \"\"}\r\n      {privateChat ? (\r\n        <PrivateChat\r\n          username={username}\r\n          setPrivateChatSecondUsername={setPrivateChatSecondUsername}\r\n          PrivateChatSecondUsername={PrivateChatSecondUsername}\r\n          socket={socket}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\NavigationBar.js",["68","69","70","71"],"import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavigationBar = ({ setClub, setOnline, setChats}) => {\r\n  const handleClubClick = () => {\r\n    setClub(true);\r\n    setOnline(false); \r\n    setChats(false);\r\n  }\r\n  const handleOnlineClick = () => {\r\n    setClub(false);\r\n    setOnline(true); \r\n    setChats(false);\r\n  }\r\n  const handleChatsClick = () => {\r\n    setClub(false);\r\n    setOnline(false); \r\n    setChats(true);\r\n  }\r\n  return (\r\n    <div class=\"navBar\">\r\n      <a onClick={handleClubClick}>CLUB</a>\r\n      <a onClick={handleOnlineClick}>ONLINE</a>\r\n      <a onClick={handleChatsClick}>CHATS</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\Club.js",[],"C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\Online.js",[],"C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\PrivateChat.js",["72","73"],"import React, { useState, useEffect } from \"react\";\r\nimport ClubMessages from \"./ClubMessages\";\r\nimport MessageBar from \"./MessageBar\";\r\n\r\nconst PrivateChat = ({\r\n  username,\r\n  PrivateChatSecondUsername,\r\n  setPrivateChatSecondUsername,\r\n  socket,\r\n}) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const sendPrivateMessage = (event) => {\r\n    event.preventDefault();\r\n    if (message) {\r\n      let privateChatRoomId = `${username}&${PrivateChatSecondUsername}`;\r\n      socket.emit(\r\n        \"privateMessage\",\r\n        username,\r\n        PrivateChatSecondUsername,\r\n        message,\r\n        privateChatRoomId,\r\n        () => setMessage(\"\")\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    socket.on(\"privateMess\", (message) => {\r\n      setMessages([...messages, message.chatData]);\r\n    });\r\n\r\n    let privateMessages = await JSON.parse(\r\n      localStorage.getItem(`${username}&${PrivateChatSecondUsername}`)\r\n    );\r\n    privateMessages ? setMessages(privateMessages) : setMessages('');\r\n  }, []);\r\n\r\n  console.log(message, messages);\r\n  return (\r\n    <div>\r\n      <ClubMessages messages={messages} username={username} />\r\n      <MessageBar\r\n        message={message}\r\n        setMessage={setMessage}\r\n        sendMessage={sendPrivateMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateChat;\r\n","C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\Chats.js",[],"C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\ClubMessages.js",[],"C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\MessageBar.js",[],"C:\\Users\\Ebird\\Documents\\GitHub\\chatspot\\frontend\\src\\components\\Message.js",["74"],"import React from \"react\";\r\nimport ReactEmoji from 'react-emoji'; \r\n\r\nconst Message = ({ message: { user, text }, username }) => {\r\n  let isSentByCurrentUser = false;\r\n  console.log(username)\r\n  const trimmedName = username.trim().toLowerCase();\r\n\r\n  if (user === trimmedName) {\r\n    isSentByCurrentUser = true;\r\n  }\r\n\r\n  return isSentByCurrentUser ? (\r\n    <div class=\"myMessageCont\">\r\n      <div class=\"myMessage\">{ReactEmoji.emojify(text)} </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"friendMessageCont\">\r\n      <div className=\"friendMessage\">{ReactEmoji.emojify(text)} </div>\r\n      <div className=\"profilePic\">\r\n        <img src=\"avatar/img.svg\" width=\"100%\"></img>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n",["75","76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":23,"column":10,"nodeType":"83","messageId":"84","endLine":23,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":68,"column":6,"nodeType":"87","endLine":68,"endColumn":23,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"89","line":2,"column":9,"nodeType":"83","messageId":"84","endLine":2,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":22,"column":7,"nodeType":"92","endLine":22,"endColumn":36},{"ruleId":"90","severity":1,"message":"91","line":23,"column":7,"nodeType":"92","endLine":23,"endColumn":38},{"ruleId":"90","severity":1,"message":"91","line":24,"column":7,"nodeType":"92","endLine":24,"endColumn":37},{"ruleId":"85","severity":1,"message":"93","line":29,"column":13,"nodeType":"94","endLine":38,"endColumn":4},{"ruleId":"85","severity":1,"message":"95","line":38,"column":6,"nodeType":"87","endLine":38,"endColumn":8,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":21,"column":9,"nodeType":"92","endLine":21,"endColumn":48},{"ruleId":"77","replacedBy":"99"},{"ruleId":"79","replacedBy":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'room' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'PrivateChatSecondUsername'. Either include it or remove the dependency array.","ArrayExpression",["103"],"'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'PrivateChatSecondUsername', 'messages', 'socket', and 'username'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["104"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["101"],["102"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [messages, Inbox, PrivateChatSecondUsername]",{"range":"109","text":"110"},"Update the dependencies array to be: [PrivateChatSecondUsername, messages, socket, username]",{"range":"111","text":"112"},[2137,2154],"[messages, Inbox, PrivateChatSecondUsername]",[1064,1066],"[PrivateChatSecondUsername, messages, socket, username]"]